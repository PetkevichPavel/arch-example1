package com.arch.app.common.base

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.annotation.LayoutRes
import androidx.databinding.DataBindingUtil
import androidx.databinding.ViewDataBinding

abstract class BaseBindingFragment<VM : BaseViewModel<VS>, VS : ViewState, B : ViewDataBinding>(
    @LayoutRes private val contentLayoutId: Int
) : BaseFragment(contentLayoutId) {

    /**
     * Field which holds BR.view identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseFragment.
     */
    abstract val brViewVariableId: Int

    /**
     * Field which holds BR.viewModel identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseFragment.
     */
    abstract val brViewModelVariableId: Int

    /**
     * Field which holds BR.viewState identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseFragment.
     */
    abstract val brViewStateVariableId: Int

    /**
     * Reference to Fragment ViewModel
     */
    abstract val viewModel: VM

    /**
     * Reference to Fragment ViewState
     */
    val viewState: VS
        get() {
            return viewModel.viewState
        }

    /**
     * Get ViewDataBinding
     */
    val binding: B
        get() = _binding
            ?: throw IllegalStateException("ViewDataBinding cannot be accessed before onCreateView() method call.")

    /**
     * ViewDataBinding instance
     */
    private var _binding: B? = null

    /**
     * Setup binding view with create view
     */
    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View =
        setupBindingView(inflater, container, contentLayoutId) {
            lifecycle.addObserver(viewModel)
            setVariable(brViewVariableId, this@BaseBindingFragment)
            setVariable(brViewModelVariableId, viewModel)
            setVariable(brViewStateVariableId, viewState)
            lifecycleOwner = this@BaseBindingFragment.viewLifecycleOwner
            _binding = this
        }

    private fun setupBindingView(
        layoutInflater: LayoutInflater,
        container: ViewGroup?,
        layoutResId: Int,
        set: B.() -> Unit
    ): View = DataBindingUtil
        .inflate<B>(layoutInflater, layoutResId, container, false)
        .also { it.set() }
        .run { root }

    /**
     * Get ViewDataBinding as a block [bind].
     */
    fun binding(bind: B.() -> Unit) =
        _binding?.bind()
            ?: throw IllegalStateException("ViewDataBinding cannot be accessed before onCreateView() method call.")

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}
