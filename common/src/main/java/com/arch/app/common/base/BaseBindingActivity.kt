package com.arch.app.common.base

import android.os.Bundle
import androidx.annotation.LayoutRes
import androidx.databinding.DataBindingUtil
import androidx.databinding.ViewDataBinding
import androidx.fragment.app.FragmentActivity

/**
 * Base Activity class with built-in ViewModel and DataBinding support.
 */
abstract class BaseBindingActivity<VM : BaseViewModel<VS>, VS : ViewState, B : ViewDataBinding>(
    @LayoutRes private val contentLayoutId: Int
) : BaseActivity() {
    /**
     * Field which holds BR.view identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseActivity.
     */
    abstract val brViewVariableId: Int

    /**
     * Field which holds BR.viewModel identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseActivity.
     */
    abstract val brViewModelVariableId: Int

    /**
     * Field which holds BR.viewState identifier generated by Data Binding framework. This field should
     * be specified only once in your project's BaseActivity.
     */
    abstract val brViewStateVariableId: Int

    /**
     * Reference to Activity ViewModel
     */
    abstract val viewModel: VM

    /**
     * Reference to Activity ViewState
     */
    val viewState: VS
        get() {
            return viewModel.viewState
        }

    /**
     * Get ViewDataBinding
     */
    val binding: B
        get() = _binding
            ?: throw IllegalStateException("ViewDataBinding cannot be accessed before onCreate() method call.")

    /**
     * ViewDataBinding instance
     */
    private var _binding: B? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        lifecycle.addObserver(viewModel)
        _binding = setupBindingView(this, contentLayoutId) {
            setVariable(brViewVariableId, this@BaseBindingActivity)
            setVariable(brViewModelVariableId, viewModel)
            setVariable(brViewStateVariableId, viewState)
            lifecycleOwner = this@BaseBindingActivity
        }
    }

    private fun setupBindingView(fragmentActivity: FragmentActivity, layoutResId: Int, set: B.() -> Unit): B = DataBindingUtil
        .setContentView<B>(fragmentActivity, layoutResId)
        .also { it.set() }
}
